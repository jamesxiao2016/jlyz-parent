<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dlbdata.dj.db.mapper.DjActiveMapper">
  <resultMap id="BaseResultMap" type="cn.dlbdata.dj.db.pojo.DjActive">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="dj_type_id" jdbcType="BIGINT" property="djTypeId" />
    <result column="dj_sub_type_id" jdbcType="BIGINT" property="djSubTypeId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="principal_name" jdbcType="VARCHAR" property="principalName" />
    <result column="has_audit" jdbcType="INTEGER" property="hasAudit" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="dj_pic_id" jdbcType="BIGINT" property="djPicId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="dj_dept_id" jdbcType="BIGINT" property="djDeptId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
  </resultMap>

	<select id="getUserActiveCountByActiveTypeAndTime" parameterType="map" resultType="java.lang.Integer">
		select count(*) from dj_active d
		WHERE d.id in (
		SELECT dj_active_id FROM
		dj_active_user dau WHERE dj_user_id =
		#{userId} AND dau.status = 1
		)
		<if test="activeType != null">
			AND d.dj_type_id = #{activeType}
		</if>
		AND (start_time BETWEEN #{startTime} and #{endTime}
		OR end_time BETWEEN #{startTime} and #{endTime} )
	</select>
	
	
	 <select id="getRunningActive" parameterType="map" resultType="java.util.Map">
	      SELECT
	        t.id, t.name, t.start_time startTime, t.end_time endTime, t.address, t.create_user_id creatUserId,
	       	t.content, t.status, t.dj_type_id djTypeId,	t.has_audit hasAudit, t.dj_sub_type_id djSubTypeId, p.name partyMemberName,
	       	(select count(*) from dj_active_user where dj_active_user.dj_user_id = #{userId} and dj_active_user.dj_active_id = t.id)signUp
	      FROM dj_active t INNER JOIN dj_partymember p on t.create_user_id = p.id
	      LEFT JOIN dj_active_dept da on da.dj_active_id = t.id 
	      WHERE 1 = 1 
	      <if test="departmentId != null">
	          AND da.dj_dept_id = #{departmentId}
	      </if>
	       <if test="endTime != null">
	          AND t.end_time &gt; #{endTime}
	      </if>
	      <if test="signUp == 1 ">
	          AND (select count(*) from dj_active_user where dj_active_user.dj_user_id = #{userId} and dj_active_user.dj_active_id = t.id) &gt; 0
	      </if>
	      <if test="signUp == 0 ">
	          AND (select count(*) from dj_active_user where dj_active_user.dj_user_id = #{userId} and dj_active_user.dj_active_id = t.id) = 0
	      </if>
	      	
	        order by signUp , t.start_time DESC
     </select>
     
     <select id="getActiveListByDeptId" parameterType="map" resultType="java.util.Map">
	      SELECT
	        t.id, t.name, t.start_time startTime, t.end_time endTime, t.address, t.create_user_id creatUserId, t.principal_name principalName,
	       	t.content, t.status, t.dj_type_id djTypeId, t.dj_sub_type_id djSubTypeId
	      FROM dj_active t
	      LEFT JOIN dj_active_dept da on da.dj_active_id = t.id 
	      <where>
		      <if test="departmentId != null">
		          AND da.dj_dept_id = #{deptId}
		      </if>
		       <if test="endTime != null">
		          AND t.end_time &gt; #{endTime}
		      </if>
	      </where>
	        order by t.start_time DESC
     </select>
     
     	
	 <select id="getParticipateActiveOne" parameterType="map" resultType="java.util.Map">
	      SELECT
	        t.id, t.name, t.start_time startTime, t.end_time endTime, t.address, t.create_user_id creatUserId,
	       	t.content, t.status, t.dj_type_id djTypeId,	t.has_audit hasAudit, t.dj_sub_type_id djSubTypeId, p.name partyMemberName,
	       	(select count(*) from dj_active_user where dj_active_user.dj_user_id = #{userId} and dj_active_user.dj_active_id = t.id)signUp
	      FROM dj_active t INNER JOIN dj_partymember p on t.create_user_id = p.id
	      LEFT JOIN dj_active_dept da on da.dj_active_id = t.id 
	      WHERE 1 = 1 
	      <if test="departmentId != null">
	          AND da.dj_dept_id = #{departmentId}
	      </if>
	       <if test="endTime != null">
	          AND t.end_time &gt; #{endTime}
	      </if>
	        order by signUp , t.start_time DESC
	        limit 1
     </select>
     
     <select id="getParticipateActiveCount" parameterType="map" resultType="java.lang.Integer">
	      SELECT count(*),
	        t.id, t.name, t.start_time, t.end_time, t.address, t.create_user_id,
	       	t.content, t.status, t.dj_type_id,	t.has_audit, t.dj_sub_type_id, p.name partyMemberName,
	       	(select count(*) from dj_active_user where dj_active_user.dj_user_id = #{userId} and dj_active_user.dj_active_id = t.id)signUp
	      FROM dj_active t INNER JOIN dj_partymember p on t.create_user_id = p.id
	      LEFT JOIN dj_active_dept da on da.dj_active_id = t.id 
	      WHERE 1 = 1 
	      <if test="departmentId != null">
	          AND da.dj_dept_id = #{departmentId}
	      </if>
	       <if test="endTime != null">
	          AND t.end_time &gt; #{endTime}
	      </if>
	        order by signUp, t.start_time DESC
     </select>

 
</mapper>